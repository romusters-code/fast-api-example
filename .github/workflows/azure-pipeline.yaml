name: Build, Push Docker Image & Deploy Infrastructure with Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ACR_NAME: ${{ secrets.ACR_NAME }}
  IMAGE_NAME: 'embedding_service'
  IMAGE_TAG: 'latest'
  TF_WORKSPACE: 'infra'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure using Service Principal
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Login to Azure Container Registry (ACR)
      run: |
        az acr login --name $ACR_NAME

    - name: Build Docker image using ACR Build
      run: |
        az acr build --registry $ACR_NAME --image $IMAGE_NAME:$IMAGE_TAG .

    - name: Push Docker image to ACR
      run: |
        echo "Docker image $IMAGE_NAME:$IMAGE_TAG built and pushed to ACR successfully."

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: '~>1.9.8'  # Specify your desired Terraform version

    - name: Terraform Init
      run: |
        cd $TF_WORKSPACE
        terraform init

    - name: Terraform Plan
      run: |
        cd $TF_WORKSPACE
        terraform plan $TF_VARS

    - name: Terraform Apply
      run: |
        cd $TF_WORKSPACE
        terraform apply -auto-approve $TF_VARS
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
